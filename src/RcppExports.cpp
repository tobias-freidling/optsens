// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// grid_search
List grid_search(int N1, int N2, int N5, bool full_grid, double lb_p1s, double ub_p1s, double lb_p2s, double ub_p2s, double lb_p3s, double ub_p3s, double lb_p6s, double ub_p6s, double lb_p7s, double ub_p7s, NumericVector lb_p4, NumericVector ub_p4, bool exist_comp_uy_bound, bool exist_tsls_bound, double c1, NumericVector c2, NumericVector c3, NumericVector c4, double c5, double c6, NumericVector c7, NumericVector b7);
RcppExport SEXP _optsens_grid_search(SEXP N1SEXP, SEXP N2SEXP, SEXP N5SEXP, SEXP full_gridSEXP, SEXP lb_p1sSEXP, SEXP ub_p1sSEXP, SEXP lb_p2sSEXP, SEXP ub_p2sSEXP, SEXP lb_p3sSEXP, SEXP ub_p3sSEXP, SEXP lb_p6sSEXP, SEXP ub_p6sSEXP, SEXP lb_p7sSEXP, SEXP ub_p7sSEXP, SEXP lb_p4SEXP, SEXP ub_p4SEXP, SEXP exist_comp_uy_boundSEXP, SEXP exist_tsls_boundSEXP, SEXP c1SEXP, SEXP c2SEXP, SEXP c3SEXP, SEXP c4SEXP, SEXP c5SEXP, SEXP c6SEXP, SEXP c7SEXP, SEXP b7SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N1(N1SEXP);
    Rcpp::traits::input_parameter< int >::type N2(N2SEXP);
    Rcpp::traits::input_parameter< int >::type N5(N5SEXP);
    Rcpp::traits::input_parameter< bool >::type full_grid(full_gridSEXP);
    Rcpp::traits::input_parameter< double >::type lb_p1s(lb_p1sSEXP);
    Rcpp::traits::input_parameter< double >::type ub_p1s(ub_p1sSEXP);
    Rcpp::traits::input_parameter< double >::type lb_p2s(lb_p2sSEXP);
    Rcpp::traits::input_parameter< double >::type ub_p2s(ub_p2sSEXP);
    Rcpp::traits::input_parameter< double >::type lb_p3s(lb_p3sSEXP);
    Rcpp::traits::input_parameter< double >::type ub_p3s(ub_p3sSEXP);
    Rcpp::traits::input_parameter< double >::type lb_p6s(lb_p6sSEXP);
    Rcpp::traits::input_parameter< double >::type ub_p6s(ub_p6sSEXP);
    Rcpp::traits::input_parameter< double >::type lb_p7s(lb_p7sSEXP);
    Rcpp::traits::input_parameter< double >::type ub_p7s(ub_p7sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lb_p4(lb_p4SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ub_p4(ub_p4SEXP);
    Rcpp::traits::input_parameter< bool >::type exist_comp_uy_bound(exist_comp_uy_boundSEXP);
    Rcpp::traits::input_parameter< bool >::type exist_tsls_bound(exist_tsls_boundSEXP);
    Rcpp::traits::input_parameter< double >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type c2(c2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type c3(c3SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type c4(c4SEXP);
    Rcpp::traits::input_parameter< double >::type c5(c5SEXP);
    Rcpp::traits::input_parameter< double >::type c6(c6SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type c7(c7SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b7(b7SEXP);
    rcpp_result_gen = Rcpp::wrap(grid_search(N1, N2, N5, full_grid, lb_p1s, ub_p1s, lb_p2s, ub_p2s, lb_p3s, ub_p3s, lb_p6s, ub_p6s, lb_p7s, ub_p7s, lb_p4, ub_p4, exist_comp_uy_bound, exist_tsls_bound, c1, c2, c3, c4, c5, c6, c7, b7));
    return rcpp_result_gen;
END_RCPP
}
// resid_cpp
arma::mat resid_cpp(const arma::mat& X, const arma::mat& Y);
RcppExport SEXP _optsens_resid_cpp(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(resid_cpp(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// r_marginal
double r_marginal(const arma::vec& A, const arma::vec& B);
RcppExport SEXP _optsens_r_marginal(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(r_marginal(A, B));
    return rcpp_result_gen;
END_RCPP
}
// r_partial
double r_partial(const arma::vec& A, const arma::vec& B, const arma::mat& C);
RcppExport SEXP _optsens_r_partial(SEXP ASEXP, SEXP BSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type B(BSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(r_partial(A, B, C));
    return rcpp_result_gen;
END_RCPP
}
// r2_marginal
double r2_marginal(const arma::vec& A, const arma::mat& B);
RcppExport SEXP _optsens_r2_marginal(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(r2_marginal(A, B));
    return rcpp_result_gen;
END_RCPP
}
// r2_partial
double r2_partial(const arma::vec& A, const arma::mat& B, const arma::mat& C);
RcppExport SEXP _optsens_r2_partial(SEXP ASEXP, SEXP BSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type B(BSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(r2_partial(A, B, C));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_optsens_grid_search", (DL_FUNC) &_optsens_grid_search, 26},
    {"_optsens_resid_cpp", (DL_FUNC) &_optsens_resid_cpp, 2},
    {"_optsens_r_marginal", (DL_FUNC) &_optsens_r_marginal, 2},
    {"_optsens_r_partial", (DL_FUNC) &_optsens_r_partial, 3},
    {"_optsens_r2_marginal", (DL_FUNC) &_optsens_r2_marginal, 2},
    {"_optsens_r2_partial", (DL_FUNC) &_optsens_r2_partial, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_optsens(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
